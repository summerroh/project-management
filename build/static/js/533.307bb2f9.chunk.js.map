{"version":3,"file":"static/js/533.307bb2f9.chunk.js","mappings":"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","sources":["components/PreviewSlider.jsx","page-sections/write/ColorPalette.jsx","page-sections/write/Dropdown.jsx","page-sections/write/TipTapEditor.jsx","pages/forum/write.jsx"],"sourcesContent":["import { Box, useMediaQuery, useTheme } from \"@mui/material\";\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\r\nimport { useRef, useState } from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport default function PreviewSlider({ images }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const sliderRef = useRef(null);\r\n\r\n  const [mainImage, setMainImage] = useState(0);\r\n\r\n  const settings = {\r\n    dots: false,\r\n    infinite: images.length > 1, // Only enable infinite scroll if more than 1 image\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    afterChange: (index) => setMainImage(index),\r\n    initialSlide: mainImage,\r\n    arrows: images.length > 1, // Only show arrows if more than 1 image\r\n    nextArrow: images.length > 1 ? <NextArrow /> : null,\r\n    prevArrow: images.length > 1 ? <PrevArrow /> : null,\r\n  };\r\n\r\n  const arrowStyles = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    transform: \"translateY(-50%)\",\r\n    zIndex: 1,\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    color: \"white\",\r\n    width: \"34px\",\r\n    height: \"34px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: \"50%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n    },\r\n  };\r\n\r\n  function NextArrow(props) {\r\n    const { onClick } = props;\r\n    return (\r\n      <Box\r\n        onClick={onClick}\r\n        sx={{\r\n          ...arrowStyles,\r\n          right: \"10px\",\r\n        }}\r\n      >\r\n        <ChevronRight size={20} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  function PrevArrow(props) {\r\n    const { onClick } = props;\r\n    return (\r\n      <Box\r\n        onClick={onClick}\r\n        sx={{\r\n          ...arrowStyles,\r\n          left: \"10px\",\r\n        }}\r\n      >\r\n        <ChevronLeft size={20} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\", marginTop: 2, marginBottom: 2 }}>\r\n      <Box sx={{ position: \"relative\" }}>\r\n        {images.length === 1 ? (\r\n          // Render single image without slider\r\n          <div>\r\n            <img\r\n              src={images[0].path}\r\n              alt=\"Single image\"\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"auto\",\r\n                maxHeight: \"500px\",\r\n                objectFit: \"contain\",\r\n                borderRadius: isMobile ? \"0\" : \"10px\",\r\n                outline: \"none\",\r\n              }}\r\n            />\r\n          </div>\r\n        ) : (\r\n          // Render slider for multiple images\r\n          <Slider ref={sliderRef} {...settings}>\r\n            {images.map((img, index) => (\r\n              <div key={index}>\r\n                <img\r\n                  src={img.path}\r\n                  alt={`Image ${index + 1}`}\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"auto\",\r\n                    maxHeight: \"500px\",\r\n                    objectFit: \"contain\",\r\n                    borderRadius: isMobile ? \"0\" : \"10px\",\r\n                    outline: \"none\",\r\n                  }}\r\n                />\r\n              </div>\r\n            ))}\r\n          </Slider>\r\n        )}\r\n\r\n        {/* Only show counter if there are multiple images */}\r\n        {images.length > 1 && (\r\n          <Box\r\n            sx={{\r\n              position: \"absolute\",\r\n              bottom: 14,\r\n              right: 10,\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              color: \"white\",\r\n              padding: \"5px 10px\",\r\n              borderRadius: \"15px\",\r\n              fontSize: \"14px\",\r\n            }}\r\n          >\r\n            {mainImage + 1}/{images.length}\r\n          </Box>\r\n        )}\r\n      </Box>\r\n\r\n      {/* Only show thumbnails if there are multiple images and not on mobile */}\r\n      {!isMobile && images.length > 1 && (\r\n        <Box mt={2} gap={1} display=\"flex\" justifyContent=\"flex-start\">\r\n          {images.map((img, index) => (\r\n            <Box\r\n              key={index}\r\n              onClick={() => {\r\n                sliderRef.current.slickGoTo(index);\r\n                setMainImage(index);\r\n              }}\r\n              sx={{\r\n                width: \"100px\",\r\n                height: \"100px\",\r\n                cursor: \"pointer\",\r\n                border:\r\n                  mainImage === index\r\n                    ? `2px solid ${theme.palette.primary.main}`\r\n                    : \"none\",\r\n                borderRadius: \"5px\",\r\n                overflow: \"hidden\",\r\n                position: \"relative\",\r\n                \"&::after\": {\r\n                  content: '\"\"',\r\n                  position: \"absolute\",\r\n                  top: 0,\r\n                  left: 0,\r\n                  width: \"100px\",\r\n                  height: \"100%\",\r\n                  backgroundColor:\r\n                    mainImage === index ? \"rgba(0, 0, 0, 0.5)\" : \"transparent\",\r\n                  transition: \"background-color 0.3s\",\r\n                },\r\n              }}\r\n            >\r\n              <img\r\n                src={img.path}\r\n                alt={`Thumbnail ${index + 1}`}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 0,\r\n                  left: 0,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  objectFit: \"cover\",\r\n                }}\r\n              />\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import { useMediaQuery, useTheme } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { HexColorPicker, HexColorInput } from \"react-colorful\";\r\n\r\nexport default function ColorPalette({ color, onChange }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const handleColorChange = (newColor) => {\r\n    onChange(newColor);\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  // Updated color array with the new values in the specified order\r\n  const colors = [\r\n    \"#151515\",\r\n    \"#787878\",\r\n    \"#C2C2C2\",\r\n    \"#EEEEEE\",\r\n    \"#FFFFFF\",\r\n    \"#FECCBE\",\r\n    \"#FEEFC5\",\r\n    \"#E4F0D5\",\r\n    \"#B8E9FF\",\r\n    \"#E0BFE6\",\r\n    \"#FD8A69\",\r\n    \"#FFCD4A\",\r\n    \"#AFD485\",\r\n    \"#58CCFF\",\r\n    \"#B96BC6\",\r\n    \"#FC5230\",\r\n    \"#FD9F28\",\r\n    \"#7DB249\",\r\n    \"#18A8F1\",\r\n    \"#9A30AE\",\r\n    \"#D94925\",\r\n    \"#FD6F22\",\r\n    \"#568A35\",\r\n    \"#1187CF\",\r\n    \"#692498\",\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"fixed\",\r\n        top: \"200px\",\r\n        left: isMobile ? \"20px\" : \"auto\",\r\n        zIndex: 1000,\r\n        background: \"white\",\r\n        padding: \"10px\",\r\n        boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\r\n        borderRadius: \"5px\",\r\n      }}\r\n      onClick={handleClick}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(5, 1fr)\",\r\n          gap: \"5px\",\r\n        }}\r\n      >\r\n        {colors.map((color, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              width: \"25px\",\r\n              height: \"25px\",\r\n              backgroundColor: color,\r\n              borderRadius: \"5px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => handleColorChange(color)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { InputBase, MenuItem, Select, useTheme } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { Small } from \"../../components/Typography\";\r\n\r\nexport default function Dropdown({\r\n  items,\r\n  width,\r\n  height,\r\n  backgroundColor,\r\n  placeholder,\r\n  onSelect,\r\n  defaultValue = \"\",\r\n}) {\r\n  const [selectValue, setSelectValue] = useState(defaultValue);\r\n\r\n  const handleChange = (event) => {\r\n    setSelectValue(event.target.value);\r\n    onSelect(event.target.value);\r\n  };\r\n\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <Select\r\n        labelId=\"demo-simple-select-label\"\r\n        id=\"demo-simple-select\"\r\n        value={selectValue}\r\n        onChange={handleChange}\r\n        displayEmpty\r\n        renderValue={(selected) => {\r\n          if (selected.length === 0) {\r\n            return (\r\n              <Small\r\n                sx={{\r\n                  fontSize: 14,\r\n                  color: theme.palette.primary.dark,\r\n                  paddingRight: 0, // Remove right padding\r\n                }}\r\n              >\r\n                {placeholder}\r\n              </Small>\r\n            );\r\n          }\r\n          return <span style={{ paddingRight: 0 }}>{selected}</span>;\r\n        }}\r\n        MenuProps={{\r\n          MenuListProps: {\r\n            style: {\r\n              padding: \"0\",\r\n              margin: \"0\",\r\n            },\r\n          },\r\n        }}\r\n        input={\r\n          <InputBase\r\n            sx={{\r\n              height: height ? height : 40,\r\n              fontSize: 14,\r\n              textAlign: \"left\",\r\n              paddingLeft: \"10px !important\",\r\n              display: \"flex\",\r\n              justifyContent: \"flex-start\",\r\n              borderRadius: \"8px\",\r\n              color: theme.palette.primary.dark,\r\n              backgroundColor: backgroundColor ? backgroundColor : \"#ffffff\",\r\n              marginBottom: 0,\r\n              border: \"none\",\r\n\r\n              \"& .MuiPopover-paper\": {\r\n                boxShadow: \"none\",\r\n              },\r\n              \"& .MuiInputBase-input\": {\r\n                paddingRight: \"0 !important\",\r\n              },\r\n            }}\r\n          />\r\n        }\r\n        IconComponent={() => null}\r\n      >\r\n        {items.map((item) => {\r\n          return (\r\n            <MenuItem\r\n              sx={{\r\n                height: height ? height : 40,\r\n                fontSize: 14,\r\n                fontWeight: 300,\r\n                border: \"1px solid #E1E1E1\",\r\n              }}\r\n              value={item}\r\n            >\r\n              {item}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </>\r\n  );\r\n}\r\n","import \"../../styles/tiptap.css\";\r\n\r\nimport {\r\n  Box,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Color } from \"@tiptap/extension-color\";\r\nimport Dropcursor from \"@tiptap/extension-dropcursor\";\r\nimport FontFamily from \"@tiptap/extension-font-family\";\r\nimport Highlight from \"@tiptap/extension-highlight\";\r\nimport Image from \"@tiptap/extension-image\";\r\nimport Link from \"@tiptap/extension-link\";\r\nimport ListItem from \"@tiptap/extension-list-item\";\r\nimport Table from \"@tiptap/extension-table\";\r\nimport TableCell from \"@tiptap/extension-table-cell\";\r\nimport TableHeader from \"@tiptap/extension-table-header\";\r\nimport TableRow from \"@tiptap/extension-table-row\";\r\nimport TextAlign from \"@tiptap/extension-text-align\";\r\nimport TextStyle from \"@tiptap/extension-text-style\";\r\nimport { EditorProvider, useCurrentEditor } from \"@tiptap/react\";\r\nimport StarterKit from \"@tiptap/starter-kit\";\r\nimport {\r\n  AlignCenter,\r\n  AlignJustify,\r\n  AlignLeft,\r\n  AlignRight,\r\n  Clipboard,\r\n  FilePlus,\r\n  ImageIcon,\r\n  Link as LinkIcon,\r\n  List,\r\n  ListOrdered,\r\n  Redo2,\r\n  Table2,\r\n  Undo2,\r\n  Unlink,\r\n  X,\r\n} from \"lucide-react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport FontSize from \"tiptap-extension-font-size\";\r\nimport ColorPalette from \"./ColorPalette\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport AppTextField from \"components/input-fields/AppTextField\";\r\nimport { toast } from \"react-toastify\";\r\nimport Slider from \"react-slick\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PreviewSlider from \"components/PreviewSlider\";\r\nimport LoadingScreen from \"components/LoadingScreen\";\r\n\r\nconst iconSize = 24;\r\nconst iconStrokeWidth = 1;\r\n\r\nconst MenuBar = ({ onFileUpload, isEditing, articleData }) => {\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  const theme = useTheme();\r\n  const [highlightColor, setHighlightColor] = useState(\"#ffc078\");\r\n  const [showHighlightColorPicker, setShowHighlightColorPicker] =\r\n    useState(false);\r\n  const [textColor, setTextColor] = useState(\"#ffc078\");\r\n  const [showTextColorPicker, setShowTextColorPicker] = useState(false);\r\n  const [selectedText, setSelectedText] = useState(\"\");\r\n  const [postType, setPostType] = useState(\"sell\");\r\n  const [language, setLanguage] = useState(\"korean\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [uploadedImageIds, setUploadedImageIds] = useState([]);\r\n  const [uploadedImages, setUploadedImages] = useState([]);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  const { editor } = useCurrentEditor();\r\n\r\n  // Initialize state with article data if editing\r\n  useEffect(() => {\r\n    if (isEditing && articleData) {\r\n      setTitle(articleData.title);\r\n      setPostType(articleData.type);\r\n      setLanguage(articleData.language);\r\n      setUploadedImages(articleData.images || []);\r\n      setUploadedImageIds(articleData.imageIds || []);\r\n      editor.commands.setContent(articleData.content);\r\n    }\r\n  }, [isEditing, articleData]);\r\n\r\n  // 글쓰기 API\r\n  const handleArticle = async () => {\r\n    try {\r\n      const endpoint = isEditing\r\n        ? `http://localhost:4000/article/${articleData._id}`\r\n        : \"http://localhost:4000/article/write\";\r\n\r\n      const method = isEditing ? \"PUT\" : \"POST\";\r\n\r\n      const response = await fetch(endpoint, {\r\n        method,\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          type: postType,\r\n          language: language,\r\n          title: title,\r\n          content: editor.getHTML(),\r\n          imageIds: uploadedImageIds,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const err = await response.json();\r\n        throw err;\r\n      }\r\n\r\n      toast.success(\r\n        isEditing ? t(\"toast.edit_success\") : t(\"toast.create_success\"),\r\n        {\r\n          position: \"top-right\",\r\n          autoClose: 3000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n        }\r\n      );\r\n      navigate(\"/forum\");\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      if (error.response.status === 403) {\r\n        toast.error(t(\"login_required\"), {\r\n          position: \"top-right\",\r\n          autoClose: 3000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n        });\r\n        navigate(\"/login\");\r\n      } else if (\r\n        error.error ===\r\n        \"Articles validation failed: title: Path `title` is required.\"\r\n      ) {\r\n        console.log(\"제목을 입력해주세요.\");\r\n        toast.error(t(\"title_required\"), {\r\n          position: \"top-right\",\r\n          autoClose: 3000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n        });\r\n      } else {\r\n        toast.error(t(\"error\"), {\r\n          position: \"top-right\",\r\n          autoClose: 3000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  //\r\n\r\n  const getSelectedText = () => {\r\n    const { from, to } = editor.state.selection;\r\n    return editor.state.doc.textBetween(from, to, \" \");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSelectedText(getSelectedText());\r\n  }, [editor.state.selection, setSelectedText]);\r\n\r\n  // 복사 기능\r\n  const copySelectedContent = () => {\r\n    navigator.clipboard\r\n      .writeText(selectedText)\r\n      .then(() => console.log(\"Text copied successfully\"))\r\n      .catch((err) => console.error(\"Failed to copy:\", err));\r\n  };\r\n\r\n  //   사진 업로드 기능\r\n  const handleImageUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setIsUploading(true); // Show loading screen\r\n      const formData = new FormData();\r\n      formData.append(\"image\", file);\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:4000/upload/image\", {\r\n          method: \"POST\",\r\n          credentials: \"include\",\r\n          body: formData,\r\n        });\r\n\r\n        if (!response.ok) throw new Error(\"Upload failed\");\r\n\r\n        const data = await response.json();\r\n\r\n        setUploadedImageIds((prev) => [...prev, data.imageId]);\r\n        setUploadedImages((prev) => [...prev, { path: data.imageUrl }]);\r\n      } catch (error) {\r\n        console.error(\"Error uploading image:\", error);\r\n        toast.error(t(\"image_upload_error\"), {\r\n          position: \"top-right\",\r\n          autoClose: 3000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n        });\r\n      } finally {\r\n        setIsUploading(false); // Hide loading screen\r\n      }\r\n    }\r\n  };\r\n\r\n  // 파일 업로드 기능\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      onFileUpload(file);\r\n    }\r\n  };\r\n\r\n  // 텍스트 하이라이트 색상 변경 기능\r\n  const handleHighlightColorChange = (color) => {\r\n    setHighlightColor(color);\r\n    editor.chain().focus().toggleHighlight({ color: color }).run();\r\n  };\r\n\r\n  // 텍스트 색상 변경 기능\r\n  const handleTextColorChange = (color) => {\r\n    setTextColor(color);\r\n    editor.chain().focus().setColor(color).run();\r\n  };\r\n\r\n  // 링크 기능\r\n  const setLink = () => {\r\n    const previousUrl = editor.getAttributes(\"link\").href;\r\n    const url = window.prompt(\"URL을 입력하세요\", previousUrl);\r\n\r\n    // cancelled\r\n    if (url === null) {\r\n      return;\r\n    }\r\n\r\n    // empty\r\n    if (url === \"\") {\r\n      editor.chain().focus().extendMarkRange(\"link\").unsetLink().run();\r\n      return;\r\n    }\r\n\r\n    // update link\r\n    editor.chain().focus().extendMarkRange(\"link\").setLink({ href: url }).run();\r\n  };\r\n\r\n  // Symbols to be inserted\r\n  const symbols = [\"©\", \"®\", \"™\", \"✓\", \"✗\", \"★\", \"☆\", \"♥\", \"♦\", \"♣\", \"♠\"];\r\n\r\n  // Function to insert symbol\r\n  const insertSymbol = (symbol) => {\r\n    editor.chain().focus().insertContent(symbol).run();\r\n  };\r\n\r\n  // Font sizes\r\n  const fontSizes = [\r\n    \"12px\",\r\n    \"14px\",\r\n    \"16px\",\r\n    \"18px\",\r\n    \"20px\",\r\n    \"24px\",\r\n    \"28px\",\r\n    \"32px\",\r\n    \"36px\",\r\n    \"48px\",\r\n  ];\r\n\r\n  // Function to change font size\r\n  const changeFontSize = (size) => {\r\n    editor.chain().focus().setFontSize(size).run();\r\n  };\r\n\r\n  // Font families\r\n  const fontFamilies = [\"Pretendard\", \"Noto Sans KR\"];\r\n\r\n  // Function to change font family\r\n  const changeFontFamily = (family) => {\r\n    editor.chain().focus().setFontFamily(family).run();\r\n  };\r\n\r\n  const handlePostTypeChange = (event) => {\r\n    setPostType(event.target.value);\r\n  };\r\n\r\n  const handleLanguageChange = (event) => {\r\n    setLanguage(event.target.value);\r\n  };\r\n\r\n  if (!editor) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isUploading && <LoadingScreen />}\r\n      <Box className=\"control-group\">\r\n        <Box\r\n          className=\"button-group\"\r\n          style={{\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            paddingRight: \"10px\",\r\n            paddingLeft: \"10px\",\r\n          }}\r\n        >\r\n          <FormControl\r\n            component=\"fieldset\"\r\n            style={{ paddingLeft: \"10px\", paddingTop: \"10px\" }}\r\n          >\r\n            <FormLabel\r\n              // component=\"legend\"\r\n              sx={{\r\n                fontSize: \"0.9rem\",\r\n                color: theme.palette.primary.dark,\r\n              }}\r\n            >\r\n              {t(\"editor.post_type.label\")}\r\n            </FormLabel>\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"post-type\"\r\n              name=\"post-type\"\r\n              value={postType}\r\n              onChange={handlePostTypeChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"sell\"\r\n                control={<Radio size=\"small\" />}\r\n                label={t(\"editor.post_type.sell\")}\r\n              />\r\n              <FormControlLabel\r\n                value=\"buy\"\r\n                control={<Radio size=\"small\" />}\r\n                label={t(\"editor.post_type.buy\")}\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n\r\n          <FormControl\r\n            component=\"fieldset\"\r\n            style={{ paddingLeft: \"10px\", paddingTop: \"10px\" }}\r\n          >\r\n            <FormLabel\r\n              // component=\"legend\"\r\n              sx={{\r\n                fontSize: \"0.9rem\",\r\n                color: theme.palette.primary.dark,\r\n              }}\r\n            >\r\n              {t(\"editor.language.label\")}\r\n            </FormLabel>\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"language\"\r\n              name=\"language\"\r\n              value={language}\r\n              onChange={handleLanguageChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"korean\"\r\n                control={<Radio size=\"small\" />}\r\n                label={t(\"editor.language.korean\")}\r\n              />\r\n              <FormControlLabel\r\n                value=\"japanese\"\r\n                control={<Radio size=\"small\" />}\r\n                label={t(\"editor.language.japanese\")}\r\n              />\r\n              <FormControlLabel\r\n                value=\"english\"\r\n                control={<Radio size=\"small\" />}\r\n                label={t(\"editor.language.english\")}\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n\r\n          <Box\r\n            onClick={handleArticle}\r\n            variant=\"contained\"\r\n            sx={{\r\n              cursor: \"pointer\",\r\n              // width: \"50px\",\r\n              padding: \"0px 20px\",\r\n              height: \"40px\",\r\n              borderRadius: \"10px\",\r\n              border: \"1px solid #e1e1e1 !important\",\r\n              color: \"white\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              backgroundColor: theme.palette.primary.darkBlue,\r\n              \"&:hover\": {\r\n                backgroundColor: theme.palette.primary.darkBlueHover,\r\n              },\r\n            }}\r\n          >\r\n            {isEditing\r\n              ? t(\"editor.buttons.update\")\r\n              : t(\"editor.buttons.publish\")}\r\n          </Box>\r\n        </Box>\r\n        <div\r\n          className=\"button-group\"\r\n          style={{\r\n            justifyContent: \"space-between\",\r\n            paddingRight: \"14px\",\r\n            paddingLeft: \"14px\",\r\n          }}\r\n        >\r\n          <button\r\n            onClick={() => editor.chain().focus().undo().run()}\r\n            disabled={!editor.can().chain().focus().undo().run()}\r\n          >\r\n            <Undo2 size={iconSize} strokeWidth={iconStrokeWidth} />\r\n          </button>\r\n          <button\r\n            onClick={() => editor.chain().focus().redo().run()}\r\n            disabled={!editor.can().chain().focus().redo().run()}\r\n          >\r\n            <Redo2 size={iconSize} strokeWidth={iconStrokeWidth} />\r\n          </button>\r\n\r\n          <button onClick={copySelectedContent}>\r\n            <Clipboard size={iconSize} strokeWidth={iconStrokeWidth} />\r\n            {t(\"editor.buttons.copy\")}\r\n          </button>\r\n\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleImageUpload}\r\n            style={{ display: \"none\" }}\r\n            id=\"image-upload\"\r\n          />\r\n          <label htmlFor=\"image-upload\" className=\"button\">\r\n            <ImageIcon size={iconSize} strokeWidth={iconStrokeWidth} />\r\n            {t(\"editor.buttons.photo\")}\r\n          </label>\r\n\r\n          <input\r\n            type=\"file\"\r\n            onChange={handleFileUpload}\r\n            style={{ display: \"none\" }}\r\n            id=\"file-upload\"\r\n          />\r\n          <label htmlFor=\"file-upload\" className=\"button\">\r\n            <FilePlus size={iconSize} strokeWidth={iconStrokeWidth} />\r\n            {t(\"editor.buttons.file\")}\r\n          </label>\r\n\r\n          <button\r\n            onClick={() => setLink()}\r\n            className={editor.isActive(\"link\") ? \"is-active\" : \"\"}\r\n          >\r\n            <LinkIcon size={iconSize} strokeWidth={iconStrokeWidth} />\r\n            {t(\"editor.buttons.link\")}\r\n          </button>\r\n          <button\r\n            onClick={() => editor.chain().focus().unsetLink().run()}\r\n            disabled={!editor.isActive(\"link\")}\r\n          >\r\n            <Unlink size={iconSize} strokeWidth={iconStrokeWidth} />\r\n            {t(\"editor.buttons.unlink\")}\r\n          </button>\r\n\r\n          <button\r\n            onClick={() =>\r\n              editor\r\n                .chain()\r\n                .focus()\r\n                .insertTable({ rows: 3, cols: 3, withHeaderRow: true })\r\n                .run()\r\n            }\r\n          >\r\n            <Table2 size={iconSize} strokeWidth={iconStrokeWidth} />\r\n            {t(\"editor.buttons.table\")}\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => editor.chain().focus().toggleBulletList().run()}\r\n            className={editor.isActive(\"bulletList\") ? \"is-active\" : \"\"}\r\n          >\r\n            <List size={iconSize} strokeWidth={iconStrokeWidth} />\r\n            {t(\"editor.buttons.list1\")}\r\n          </button>\r\n          <button\r\n            onClick={() => editor.chain().focus().toggleOrderedList().run()}\r\n            className={editor.isActive(\"orderedList\") ? \"is-active\" : \"\"}\r\n          >\r\n            <ListOrdered size={iconSize} strokeWidth={iconStrokeWidth} />\r\n            {t(\"editor.buttons.list2\")}\r\n          </button>\r\n\r\n          <Box>\r\n            <Dropdown\r\n              items={symbols}\r\n              onSelect={insertSymbol}\r\n              width={\"70px\"}\r\n              height={\"40px\"}\r\n              placeholder={t(\"editor.buttons.special_char\")}\r\n            />\r\n          </Box>\r\n        </div>\r\n        <div className=\"button-group\">\r\n          <Dropdown\r\n            defaultValue={fontFamilies[0]}\r\n            items={fontFamilies}\r\n            onSelect={changeFontFamily}\r\n            width={\"140px\"}\r\n            height={\"40px\"}\r\n            placeholder=\"Font Family\"\r\n          />\r\n\r\n          <Dropdown\r\n            defaultValue={fontSizes[0]}\r\n            items={fontSizes}\r\n            onSelect={changeFontSize}\r\n            width={\"80px\"}\r\n            height={\"40px\"}\r\n            placeholder=\"Font Size\"\r\n          />\r\n\r\n          <Divider\r\n            orientation=\"vertical\"\r\n            flexItem\r\n            sx={{ margin: \"10px 10px\" }}\r\n          />\r\n\r\n          <button\r\n            onClick={() => editor.chain().focus().toggleBold().run()}\r\n            disabled={!editor.can().chain().focus().toggleBold().run()}\r\n            className={editor.isActive(\"bold\") ? \"is-active\" : \"\"}\r\n          >\r\n            <img src=\"/static/editor/bold.svg\" alt=\"bold\" />\r\n          </button>\r\n          <button\r\n            onClick={() => editor.chain().focus().toggleItalic().run()}\r\n            disabled={!editor.can().chain().focus().toggleItalic().run()}\r\n            className={editor.isActive(\"italic\") ? \"is-active\" : \"\"}\r\n          >\r\n            <img src=\"/static/editor/italic.svg\" alt=\"italic\" />\r\n          </button>\r\n          <button\r\n            onClick={() => editor.chain().focus().toggleStrike().run()}\r\n            disabled={!editor.can().chain().focus().toggleStrike().run()}\r\n            className={editor.isActive(\"strike\") ? \"is-active\" : \"\"}\r\n          >\r\n            <img src=\"/static/editor/strike.svg\" alt=\"strike\" />\r\n          </button>\r\n          <button\r\n            onClick={() =>\r\n              setShowHighlightColorPicker(!showHighlightColorPicker)\r\n            }\r\n            className={editor.isActive(\"highlight\") ? \"is-active\" : \"\"}\r\n            style={{ position: \"relative\" }}\r\n          >\r\n            <img src=\"/static/editor/highlight.svg\" alt=\"highlight\" />\r\n            {showHighlightColorPicker && (\r\n              <ColorPalette\r\n                color={highlightColor}\r\n                onChange={handleHighlightColorChange}\r\n              />\r\n            )}\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => setShowTextColorPicker(!showTextColorPicker)}\r\n            className={\r\n              editor.isActive(\"textStyle\", { color: textColor })\r\n                ? \"is-active\"\r\n                : \"\"\r\n            }\r\n            style={{ position: \"relative\" }}\r\n          >\r\n            <img src=\"/static/editor/textColor.svg\" alt=\"textColor\" />\r\n            {showTextColorPicker && (\r\n              <ColorPalette\r\n                color={textColor}\r\n                onChange={handleTextColorChange}\r\n              />\r\n            )}\r\n          </button>\r\n\r\n          <Divider\r\n            orientation=\"vertical\"\r\n            flexItem\r\n            sx={{ margin: \"10px 10px\" }}\r\n          />\r\n\r\n          <button\r\n            onClick={() => editor.chain().focus().setTextAlign(\"left\").run()}\r\n            className={\r\n              editor.isActive({ textAlign: \"left\" }) ? \"is-active\" : \"\"\r\n            }\r\n          >\r\n            <AlignLeft size={iconSize} strokeWidth={iconStrokeWidth} />\r\n          </button>\r\n          <button\r\n            onClick={() => editor.chain().focus().setTextAlign(\"center\").run()}\r\n            className={\r\n              editor.isActive({ textAlign: \"center\" }) ? \"is-active\" : \"\"\r\n            }\r\n          >\r\n            <AlignCenter size={iconSize} strokeWidth={iconStrokeWidth} />\r\n          </button>\r\n          <button\r\n            onClick={() => editor.chain().focus().setTextAlign(\"right\").run()}\r\n            className={\r\n              editor.isActive({ textAlign: \"right\" }) ? \"is-active\" : \"\"\r\n            }\r\n          >\r\n            <AlignRight size={iconSize} strokeWidth={iconStrokeWidth} />\r\n          </button>\r\n          <button\r\n            onClick={() => editor.chain().focus().setTextAlign(\"justify\").run()}\r\n            className={\r\n              editor.isActive({ textAlign: \"justify\" }) ? \"is-active\" : \"\"\r\n            }\r\n          >\r\n            <AlignJustify size={iconSize} strokeWidth={iconStrokeWidth} />\r\n          </button>\r\n        </div>\r\n\r\n        <AppTextField\r\n          placeholder={t(\"editor.title.placeholder\")}\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          sx={{\r\n            backgroundColor: \"white\",\r\n            borderRadius: \"0px\",\r\n            border: \"none\",\r\n            borderBottom: \"1px solid #e1e1e1\",\r\n            \"& .MuiOutlinedInput-notchedOutline\": {\r\n              border: \"none\",\r\n            },\r\n          }}\r\n        />\r\n\r\n        {uploadedImages.length > 0 && <PreviewSlider images={uploadedImages} />}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nconst extensions = [\r\n  Color.configure({ types: [TextStyle.name, ListItem.name] }),\r\n  TextStyle.configure({ types: [ListItem.name] }),\r\n  StarterKit.configure({\r\n    bulletList: {\r\n      keepMarks: true,\r\n      keepAttributes: false, // TODO : Making this as `false` becase marks are not preserved when I try to preserve attrs, awaiting a bit of help\r\n    },\r\n    orderedList: {\r\n      keepMarks: true,\r\n      keepAttributes: false, // TODO : Making this as `false` becase marks are not preserved when I try to preserve attrs, awaiting a bit of help\r\n    },\r\n  }),\r\n  Image,\r\n  Dropcursor,\r\n  Table.configure({\r\n    resizable: true,\r\n  }),\r\n  TableRow,\r\n  TableHeader,\r\n  TableCell,\r\n  Highlight.configure({ multicolor: true }),\r\n  FontSize.configure(),\r\n  TextAlign.configure({\r\n    types: [\"heading\", \"paragraph\"],\r\n  }),\r\n  FontFamily.configure(),\r\n  Link.configure({\r\n    openOnClick: true,\r\n    linkOnPaste: true,\r\n    autolink: true,\r\n    defaultProtocol: \"https\",\r\n    HTMLAttributes: {\r\n      target: \"_blank\",\r\n      rel: \"noopener noreferrer\",\r\n    },\r\n  }),\r\n];\r\n\r\nexport default function TipTapEditor({\r\n  isEditing = false,\r\n  articleData = null,\r\n}) {\r\n  const { t } = useTranslation();\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n  const content = t(\"editor.content.placeholder\");\r\n\r\n  const handleFileUpload = (file) => {\r\n    setUploadedFiles((prevFiles) => [...prevFiles, file]);\r\n  };\r\n\r\n  const removeFile = (indexToRemove) => {\r\n    setUploadedFiles((prevFiles) =>\r\n      prevFiles.filter((_, index) => index !== indexToRemove)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <EditorProvider\r\n        slotBefore={\r\n          <MenuBar\r\n            onFileUpload={handleFileUpload}\r\n            isEditing={isEditing}\r\n            articleData={articleData}\r\n          />\r\n        }\r\n        extensions={extensions}\r\n        content={content}\r\n      ></EditorProvider>\r\n\r\n      {/* Existing file upload display */}\r\n      {uploadedFiles.length > 0 && (\r\n        <div className=\"uploaded-files-container\">\r\n          <h5 style={{ marginBottom: \"12px\" }}>\r\n            {t(\"editor.uploaded_files.title\")}\r\n          </h5>\r\n          <div className=\"file-list\">\r\n            {uploadedFiles.map((file, index) => (\r\n              <div key={index} className=\"file-item\">\r\n                <span className=\"file-name\">{file.name}</span>\r\n                <button\r\n                  className=\"remove-file\"\r\n                  onClick={() => removeFile(index)}\r\n                >\r\n                  <X size={16} />\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Grid, useMediaQuery, useTheme } from \"@mui/material\";\r\nimport { useAuth } from \"contexts/AuthContext\";\r\nimport TipTapEditor from \"page-sections/write/TipTapEditor\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport LoadingScreen from \"components/LoadingScreen\";\r\n\r\nexport default function Write() {\r\n  const { isLoggedIn } = useAuth();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [article, setArticle] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const articleId = location.state?.articleId;\r\n  const isEditing = Boolean(articleId);\r\n\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const isTablet = useMediaQuery(theme.breakpoints.down(\"lg\"));\r\n  const isLaptop = useMediaQuery(theme.breakpoints.down(\"lg\"));\r\n\r\n  const toastShownRef = useRef(false);\r\n\r\n  const fetchArticle = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const { data } = await axios.get(\r\n        `http://localhost:4000/article/${articleId}`,\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n      setArticle(data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(err.response?.data || \"An error occurred\");\r\n      console.error(\"Error fetching article:\", err);\r\n      toast.error(\"게시글을 불러오는데 실패했습니다.\");\r\n      navigate(\"/forum\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (articleId) {\r\n      fetchArticle();\r\n    }\r\n  }, [articleId, navigate]);\r\n\r\n  // 로그인 확인\r\n  useEffect(() => {\r\n    if (!isLoggedIn && !toastShownRef.current) {\r\n      toast.error(\"로그인 후 이용해주세요.\", {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n      });\r\n      toastShownRef.current = true;\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n  }, [isLoggedIn, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        my={isTablet ? 0 : 6}\r\n        sx={{\r\n          width: isLaptop ? \"100%\" : \"1100px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          width={\"100%\"}\r\n          alignItems={\"center\"}\r\n          justifyContent={\"center\"}\r\n        >\r\n          <Grid item xs={12} bgcolor={\"white\"} borderRadius={\"10px\"}>\r\n            {isLoading ? (\r\n              <LoadingScreen />\r\n            ) : (\r\n              <TipTapEditor isEditing={isEditing} articleData={article} />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"],"names":["PreviewSlider","_ref","images","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","sliderRef","useRef","mainImage","setMainImage","useState","settings","dots","infinite","length","speed","slidesToShow","slidesToScroll","afterChange","index","initialSlide","arrows","nextArrow","_jsx","NextArrow","prevArrow","PrevArrow","arrowStyles","position","top","transform","zIndex","cursor","backgroundColor","color","width","height","display","alignItems","justifyContent","borderRadius","props","onClick","Box","sx","right","children","ChevronRight","size","left","ChevronLeft","_jsxs","marginTop","marginBottom","src","path","alt","style","maxHeight","objectFit","outline","Slider","ref","map","img","bottom","padding","fontSize","mt","gap","current","slickGoTo","border","palette","primary","main","overflow","content","transition","ColorPalette","onChange","background","boxShadow","e","stopPropagation","gridTemplateColumns","Dropdown","items","placeholder","onSelect","defaultValue","selectValue","setSelectValue","_Fragment","Select","labelId","id","value","event","target","displayEmpty","renderValue","selected","Small","dark","paddingRight","MenuProps","MenuListProps","margin","input","InputBase","textAlign","paddingLeft","IconComponent","item","MenuItem","fontWeight","iconSize","MenuBar","onFileUpload","isEditing","articleData","navigate","useNavigate","t","useTranslation","highlightColor","setHighlightColor","showHighlightColorPicker","setShowHighlightColorPicker","textColor","setTextColor","showTextColorPicker","setShowTextColorPicker","selectedText","setSelectedText","postType","setPostType","language","setLanguage","title","setTitle","uploadedImageIds","setUploadedImageIds","uploadedImages","setUploadedImages","isUploading","setIsUploading","editor","useCurrentEditor","useEffect","type","imageIds","commands","setContent","getSelectedText","from","to","state","selection","doc","textBetween","fontSizes","fontFamilies","LoadingScreen","className","FormControl","component","paddingTop","FormLabel","RadioGroup","row","name","FormControlLabel","control","Radio","label","async","endpoint","_id","method","response","fetch","credentials","headers","body","JSON","stringify","getHTML","ok","json","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","error","console","status","log","variant","darkBlue","darkBlueHover","chain","focus","undo","run","disabled","can","Undo2","strokeWidth","redo","Redo2","copySelectedContent","navigator","clipboard","writeText","then","catch","err","Clipboard","accept","file","files","formData","FormData","append","Error","data","prev","imageId","imageUrl","htmlFor","ImageIcon","FilePlus","setLink","previousUrl","getAttributes","href","url","window","prompt","extendMarkRange","unsetLink","isActive","LinkIcon","Unlink","insertTable","rows","cols","withHeaderRow","Table2","toggleBulletList","List","toggleOrderedList","ListOrdered","symbol","insertContent","family","setFontFamily","setFontSize","Divider","orientation","flexItem","toggleBold","toggleItalic","toggleStrike","toggleHighlight","setColor","setTextAlign","AlignLeft","AlignCenter","AlignRight","AlignJustify","AppTextField","borderBottom","extensions","Color","types","TextStyle","ListItem","StarterKit","bulletList","keepMarks","keepAttributes","orderedList","Image","Dropcursor","Table","resizable","TableRow","TableHeader","TableCell","Highlight","multicolor","FontSize","TextAlign","FontFamily","Link","openOnClick","linkOnPaste","autolink","defaultProtocol","HTMLAttributes","rel","TipTapEditor","_ref2","uploadedFiles","setUploadedFiles","EditorProvider","slotBefore","prevFiles","removeFile","indexToRemove","filter","_","X","Write","_location$state","isLoggedIn","useAuth","location","useLocation","article","setArticle","isLoading","setIsLoading","setError","articleId","Boolean","isTablet","isLaptop","toastShownRef","axios","withCredentials","_err$response","fetchArticle","my","Grid","container","xs","bgcolor"],"sourceRoot":""}