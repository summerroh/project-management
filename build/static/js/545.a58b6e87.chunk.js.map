{"version":3,"file":"static/js/545.a58b6e87.chunk.js","mappings":"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","sources":["components/ReversePagination.jsx","assets/calendar.svg","assets/check.svg","assets/icon-check-admin.svg","assets/icon-pin.svg","assets/view.svg","page-sections/forum-list/Card2.jsx","components/AppPagination.jsx","components/SwipeableCarousel.jsx","page-sections/forum-list/CarouselCard2.jsx","page-sections/forum-list/List.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, useTheme } from \"@mui/material\";\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\";\r\nimport globalcss from \"styles/global.css\";\r\nimport { H7 } from \"./Typography\";\r\n\r\nconst ReversePagination = ({ totalItems }) => {\r\n  const theme = useTheme();\r\n  const [currentPage, setCurrentPage] = useState(totalItems);\r\n\r\n  const totalPages = totalItems;\r\n  const pageRange = 10; // Number of page numbers to display in the middle\r\n\r\n  const onChange = (page) => {\r\n    // console.log(page);\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n    onChange(page);\r\n  };\r\n\r\n  const renderPageNumbers = () => {\r\n    const pageNumbers = [];\r\n    let startPage = Math.max(currentPage - Math.floor(pageRange / 2), 1);\r\n    let endPage = Math.min(startPage + pageRange - 1, totalPages);\r\n\r\n    if (endPage - startPage < pageRange - 1) {\r\n      startPage = Math.max(endPage - pageRange + 1, 1);\r\n    }\r\n\r\n    // Add last page number\r\n    if (endPage < totalPages) {\r\n      if (endPage < totalPages - 1) {\r\n        // Add ellipsis if there are more pages after the last displayed page\r\n        pageNumbers.push(<span key=\"ellipsis2\">...</span>);\r\n      }\r\n      pageNumbers.push(renderPageButton(totalPages));\r\n    }\r\n\r\n    // Add middle page numbers in reverse order\r\n    for (let i = endPage; i >= startPage; i--) {\r\n      pageNumbers.push(renderPageButton(i));\r\n    }\r\n\r\n    // Add first page number in reverse order\r\n    if (startPage > 1) {\r\n      if (startPage > 2) {\r\n        // Add ellipsis if there are more pages before the first displayed page\r\n        pageNumbers.push(<span key=\"ellipsis1\">...</span>);\r\n      }\r\n      pageNumbers.push(renderPageButton(1));\r\n    }\r\n\r\n    return pageNumbers;\r\n  };\r\n\r\n  const renderPageButton = (pageNumber) => (\r\n    <button\r\n      className={\r\n        currentPage === pageNumber ? \"selected-button\" : \"pagination-button\"\r\n      }\r\n      key={pageNumber}\r\n      onClick={() => handlePageChange(pageNumber)}\r\n    >\r\n      {pageNumber}\r\n    </button>\r\n  );\r\n\r\n  const handlePreviousClick = () => {\r\n    // setCurrentPage(Math.max(currentPage - pageRange, 1));\r\n    setCurrentPage(Math.max(currentPage - 1, 1));\r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    // setCurrentPage(Math.min(currentPage + pageRange, totalPages));\r\n    setCurrentPage(Math.min(currentPage + 1, totalPages));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={handleNextClick}\r\n        disabled={currentPage >= totalPages}\r\n        style={{\r\n          borderWidth: 0,\r\n          backgroundColor: \"transparent\",\r\n          height: \"33px\",\r\n          minWidth: \"33px\",\r\n          maxWidth: \"33px\",\r\n        }}\r\n      >\r\n        <ChevronLeft size={\"19px\"} />\r\n      </Button>\r\n      <H7>{renderPageNumbers()}</H7>\r\n      <Button\r\n        onClick={handlePreviousClick}\r\n        disabled={currentPage <= 1}\r\n        style={{\r\n          borderWidth: 0,\r\n          backgroundColor: \"transparent\",\r\n          height: \"33px\",\r\n          minWidth: \"33px\",\r\n          maxWidth: \"33px\",\r\n        }}\r\n      >\r\n        <ChevronRight size={\"19px\"} />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReversePagination;\r\n","var _path, _path2, _path3, _path4;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCalendar(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 13,\n    viewBox: \"0 0 11 13\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.29167 2.1665H1.70833C1.11002 2.1665 0.625 2.65153 0.625 3.24984V10.8332C0.625 11.4315 1.11002 11.9165 1.70833 11.9165H9.29167C9.88998 11.9165 10.375 11.4315 10.375 10.8332V3.24984C10.375 2.65153 9.88998 2.1665 9.29167 2.1665Z\",\n    stroke: \"#767676\",\n    strokeWidth: 1.2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.66602 1.08325V3.24992\",\n    stroke: \"#767676\",\n    strokeWidth: 1.2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.33398 1.08325V3.24992\",\n    stroke: \"#767676\",\n    strokeWidth: 1.2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.625 5.4165H10.375\",\n    stroke: \"#767676\",\n    strokeWidth: 1.2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCalendar);\nexport default __webpack_public_path__ + \"static/media/calendar.fca22ce5591b13547fd62ddd485e0bc5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCheck(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 8,\n    viewBox: \"0 0 10 8\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 1.25L3.5 6.75L1 4.25\",\n    stroke: \"#024EA2\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheck);\nexport default __webpack_public_path__ + \"static/media/check.0f56006db62c4794f984b51dec9cf36e.svg\";\nexport { ForwardRef as ReactComponent };","var _rect, _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgIconCheckAdmin(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 19,\n    viewBox: \"0 0 18 19\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    y: 0.5,\n    width: 18,\n    height: 18,\n    rx: 9,\n    fill: \"#2CA202\",\n    fillOpacity: 0.15\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 6.75L7.5 12.25L5 9.75\",\n    stroke: \"#2CA202\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconCheckAdmin);\nexport default __webpack_public_path__ + \"static/media/icon-check-admin.020251924410e7cffd0f028611b4a127.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgIconPin(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 18,\n    viewBox: \"0 0 11 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.585 8.585V1.717H9.4435V0H0.8585V1.717H1.717V8.585L0 10.302V12.019H4.4642V17.17H5.8378V12.019H10.302V10.302L8.585 8.585Z\",\n    fill: \"#A5A5A5\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconPin);\nexport default __webpack_public_path__ + \"static/media/icon-pin.1a897535bd5465dfc0251d3bc2a16b1e.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgView(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 15,\n    viewBox: \"0 0 14 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1_2605)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.583984 7.49992C0.583984 7.49992 2.91732 2.83325 7.00065 2.83325C11.084 2.83325 13.4173 7.49992 13.4173 7.49992C13.4173 7.49992 11.084 12.1666 7.00065 12.1666C2.91732 12.1666 0.583984 7.49992 0.583984 7.49992Z\",\n    stroke: \"#767676\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 9.25C7.9665 9.25 8.75 8.4665 8.75 7.5C8.75 6.5335 7.9665 5.75 7 5.75C6.0335 5.75 5.25 6.5335 5.25 7.5C5.25 8.4665 6.0335 9.25 7 9.25Z\",\n    stroke: \"#767676\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1_2605\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 14,\n    height: 14,\n    fill: \"white\",\n    transform: \"translate(0 0.5)\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgView);\nexport default __webpack_public_path__ + \"static/media/view.6cffa046d1f6c360c9cea3b677a9e63b.svg\";\nexport { ForwardRef as ReactComponent };","import { Box, Chip, Divider, Grid, alpha, useMediaQuery } from \"@mui/material\";\r\nimport { H5, H6, Small } from \"components/Typography\";\r\nimport React from \"react\";\r\nimport FlexRowAlign from \"components/flexbox/FlexRowAlign\";\r\nimport heart from \"assets/emoji/heart-emoji.png\";\r\nimport chat from \"assets/emoji/chat-emoji.png\";\r\nimport img1 from \"assets/img1.png\";\r\nimport { useTheme } from \"@emotion/react\";\r\n\r\nexport default function Card2({ onForumClick }) {\r\n  const theme = useTheme();\r\n  const isTablet = useMediaQuery(theme.breakpoints.down(\"lg\"));\r\n\r\n  return (\r\n    <>\r\n      <Grid item onClick={() => onForumClick()} sx={{ cursor: \"pointer\" }}>\r\n        <Grid\r\n          mb={2}\r\n          container\r\n          sx={{\r\n            width: \"100%\",\r\n            backgroundColor: \"#ffffff\",\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            borderRadius: 3,\r\n            overflow: \"hidden\",\r\n            border: \"1px solid #E1E1E1\",\r\n            justifyContent: \"space-between\",\r\n            maxWidth: \"225px\",\r\n          }}\r\n        >\r\n          <Grid container item mb={1}>\r\n            <img\r\n              width=\"225px\"\r\n              src={img1}\r\n              alt={\"Banner\"}\r\n              style={{ objectFit: \"cover\" }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid container item px={1.5}>\r\n            <Grid container item spacing={1} mt={0} mb={1}>\r\n              <Grid\r\n                item\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <FlexRowAlign gap={0.5}>\r\n                  <img src={heart} width={\"16px\"} />\r\n                  <span\r\n                    style={{\r\n                      fontSize: 12.5,\r\n                      color: \"#024EA2\",\r\n                      fontWeight: 500,\r\n                    }}\r\n                  >\r\n                    좋아요{\" \"}\r\n                    <strong\r\n                      style={{\r\n                        fontWeight: 800,\r\n                      }}\r\n                    >\r\n                      78개\r\n                    </strong>\r\n                  </span>\r\n                </FlexRowAlign>\r\n              </Grid>\r\n\r\n              <Grid\r\n                mx={1}\r\n                item\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Divider\r\n                  orientation=\"vertical\"\r\n                  style={{\r\n                    width: \"1.5px\",\r\n                    height: \"11px\",\r\n                    color: \"#024EA2\",\r\n                    backgroundColor: \"#024EA2\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <FlexRowAlign gap={0.5}>\r\n                  <img src={chat} width={\"16px\"} />\r\n                  <span\r\n                    style={{\r\n                      fontSize: 12.5,\r\n                      color: \"#024EA2\",\r\n                      fontWeight: 500,\r\n                    }}\r\n                  >\r\n                    댓글{\" \"}\r\n                    <strong\r\n                      style={{\r\n                        fontWeight: 800,\r\n                      }}\r\n                    >\r\n                      24개\r\n                    </strong>\r\n                  </span>\r\n                </FlexRowAlign>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <H6 lineHeight={1.3} fontWeight={700}>\r\n                [건강보장] 질병장해 1억 플랜\r\n              </H6>\r\n            </Box>\r\n\r\n            <Grid container item spacing={1} mt={0} mb={1}>\r\n              <Grid\r\n                item\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <FlexRowAlign gap={0.5}>\r\n                  <span\r\n                    style={{\r\n                      fontSize: 12.5,\r\n                      color: \"#024EA2\",\r\n                      fontWeight: 500,\r\n                    }}\r\n                  >\r\n                    작성자\r\n                  </span>\r\n                </FlexRowAlign>\r\n              </Grid>\r\n\r\n              <Grid\r\n                mx={0.2}\r\n                item\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Divider\r\n                  orientation=\"vertical\"\r\n                  style={{\r\n                    width: \"2px\",\r\n                    height: \"11px\",\r\n                    color: \"#024EA2\",\r\n                    backgroundColor: \"#024EA2\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <FlexRowAlign gap={0.5}>\r\n                  <span\r\n                    style={{\r\n                      fontSize: 12.5,\r\n                      color: \"#024EA2\",\r\n                      fontWeight: 500,\r\n                    }}\r\n                  >\r\n                    정닥터\r\n                  </span>\r\n                </FlexRowAlign>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container item>\r\n              <H6 sx={{ color: \"#151515\", fontWeight: 800 }} mb={0}>\r\n                월 28,250원\r\n              </H6>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container item spacing={1} mt={0.1} px={1.5}>\r\n            <Grid item>\r\n              <Chip\r\n                label={\"신한\"}\r\n                sx={{\r\n                  height: 22,\r\n                  fontSize: 12.5,\r\n                  fontWeight: 600,\r\n                  color: \"#024EA2\",\r\n                  backgroundColor: alpha(\"#024EA2\", 0.1),\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                label={\"한화\"}\r\n                sx={{\r\n                  height: 22,\r\n                  fontSize: 12.5,\r\n                  fontWeight: 600,\r\n                  color: \"#024EA2\",\r\n                  backgroundColor: alpha(\"#024EA2\", 0.1),\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                label={\"DB\"}\r\n                sx={{\r\n                  height: 22,\r\n                  fontSize: 12.5,\r\n                  fontWeight: 600,\r\n                  color: \"#024EA2\",\r\n                  backgroundColor: alpha(\"#024EA2\", 0.1),\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container item spacing={1} mt={0.1} px={1.5} mb={2}>\r\n            <Grid item>\r\n              <Chip\r\n                label={\"ORIGINAL\"}\r\n                sx={{\r\n                  height: 22,\r\n                  fontSize: 12.5,\r\n                  color: \"#ffffff\",\r\n                  backgroundColor: \"#000000\",\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                label={\"BEST\"}\r\n                sx={{\r\n                  height: 22,\r\n                  fontSize: 12.5,\r\n                  color: \"#024EA2\",\r\n                  backgroundColor: alpha(\"#024EA2\", 0.1),\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Chip\r\n                label={\"NEW\"}\r\n                sx={{\r\n                  height: 22,\r\n                  fontSize: 12.5,\r\n                  color: \"#E95050\",\r\n                  backgroundColor: alpha(\"#E95050\", 0.1),\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n    // )}\r\n    // </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { Pagination, styled } from \"@mui/material\";\n\nexport const StyledPagination = styled(Pagination)(({ theme }) => ({\n  \"& .MuiPaginationItem-page.Mui-selected\": {\n    fontWeight: 600,\n  },\n}));\n\nconst AppPagination = ({ count, page, onChange, ...props }) => {\n  const handleChange = (event, value) => {\n    if (onChange) {\n      onChange(value);\n    }\n  };\n\n  return (\n    <StyledPagination\n      count={count}\n      page={page}\n      onChange={handleChange}\n      {...props}\n    />\n  );\n};\n\nexport default AppPagination;\n","import React, { useEffect } from \"react\";\r\nimport { useDrag } from \"@use-gesture/react\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nvar flag = true;\r\n\r\nconst SwipeableCarousel = ({\r\n  children,\r\n  activeIndex,\r\n  setActiveIndex,\r\n  carouselItems,\r\n  customStyle,\r\n}) => {\r\n  const bind = useDrag(({ direction, distance }) => {\r\n    if (!flag) return;\r\n\r\n    if (\r\n      (direction.join() === [-1, 0].join() && distance[0] > 12) ||\r\n      (direction.join() === [-1, 1].join() && distance[0] > 12)\r\n    ) {\r\n      // Swipe left\r\n      setActiveIndex((prevIndex) =>\r\n        prevIndex < carouselItems.length - 1 ? prevIndex + 1 : prevIndex\r\n      );\r\n      // console.log(\"left\");\r\n      // console.log(activeIndex > 0 ? activeIndex - 1 : 0);\r\n      flag = false;\r\n    } else if (\r\n      (direction.join() === [1, 0].join() && distance[0] > 12) ||\r\n      (direction.join() === [1, 1].join() && distance[0] > 12)\r\n    ) {\r\n      // Swipe right\r\n      setActiveIndex((prevIndex) => (prevIndex > 0 ? prevIndex - 1 : 0));\r\n      // console.log(\"right\");\r\n      // console.log(\r\n      //   activeIndex < carouselItems.length - 1 ? activeIndex + 1 : activeIndex\r\n      // );\r\n      flag = false;\r\n    }\r\n  });\r\n\r\n  const handlePointerUp = () => {\r\n    // console.log(\"pointer up\");\r\n    // console.log(\"flag\", flag);\r\n    flag = true; // Set flag to true when mouse button is released\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        textAlign: \"center\",\r\n        position: \"relative\",\r\n        ...customStyle,\r\n      }}\r\n    >\r\n      <div\r\n        {...bind()}\r\n        style={{ touchAction: \"pan-y\", ...customStyle }}\r\n        onPointerUp={handlePointerUp}\r\n      >\r\n        {/* Your Carousel component goes here */}\r\n        {/* Make sure to pass activeIndex, setActiveIndex, carouselItems, and other props to your Carousel component */}\r\n        {/* Example: <Carousel index={activeIndex} onChange={(index) => setActiveIndex(index)} ... /> */}\r\n        <Carousel\r\n          swipe={false}\r\n          stopAutoPlayOnHover\r\n          autoPlay={false}\r\n          animation=\"slide\"\r\n          index={activeIndex}\r\n          onChange={(index) => setActiveIndex(index)}\r\n          indicators={false}\r\n          NavButton={({ onClick, className, style, next, prev }) => {\r\n            return (\r\n              <Button\r\n                onClick={onClick}\r\n                className={className}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"-10%\",\r\n                  left: \"0\",\r\n                  transform: \"translateY(-50%)\",\r\n                }}\r\n              >\r\n                {next && \"Next\"}\r\n                {prev && \"Previous\"}\r\n              </Button>\r\n            );\r\n          }}\r\n        >\r\n          {children}\r\n        </Carousel>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SwipeableCarousel;\r\n","import {\r\n  Box,\r\n  Grid,\r\n  useMediaQuery,\r\n  Chip,\r\n  alpha,\r\n  Stack,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport { H6, Small } from \"components/Typography\";\r\nimport React, { useState } from \"react\";\r\nimport { Star } from \"@mui/icons-material\";\r\nimport Banner from \"assets/banner.png\";\r\nimport Banner2 from \"assets/banner2.png\";\r\nimport { useTheme } from \"@emotion/react\";\r\nimport AppPagination from \"components/AppPagination\";\r\nimport img3 from \"assets/img3.png\";\r\nimport SwipeableCarousel from \"components/SwipeableCarousel\";\r\nimport calendar from \"assets/emoji/calendar-emoji.png\";\r\nimport eyes from \"assets/emoji/eyes-emoji.png\";\r\nimport heart from \"assets/emoji/heart-emoji.png\";\r\nimport chat from \"assets/emoji/chat-emoji.png\";\r\nimport FlexRowAlign from \"components/flexbox/FlexRowAlign\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nvar carouselItems = [\r\n  {\r\n    name: \"Random Name #1\",\r\n    description: \"2024 너나위의 내집마련 기초반\",\r\n    indicatorTitle: \"내집마련 기초반\",\r\n    img: Banner,\r\n  },\r\n  {\r\n    name: \"Random Name #2\",\r\n    description: \"친구와 함께 듣는 클래스\",\r\n    indicatorTitle: \"함께 클래스\",\r\n    img: Banner2,\r\n  },\r\n];\r\n\r\nconst cardData = [\r\n  {\r\n    title: \"[건강보장] 질병장해 1억 플랜\",\r\n    tag: \"TODAY\",\r\n  },\r\n  {\r\n    title: \"[건강보장] 질병장해 1억 플랜\",\r\n    tag: \"HOT\",\r\n  },\r\n  {\r\n    title: \"[건강보장] 질병장해 1억 플랜\",\r\n    tag: \"NEW\",\r\n  },\r\n  {\r\n    title: \"[건강보장] 질병장해 1억 플랜\",\r\n    tag: \"BEST\",\r\n  },\r\n];\r\n\r\nexport default function CarouselCard2({}) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const isTablet = useMediaQuery(theme.breakpoints.down(\"lg\"));\r\n  const navigate = useNavigate();\r\n\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n  const handlePagination = (event, page) => {\r\n    setActiveIndex(page - 1);\r\n  };\r\n\r\n  const onForumClick = () => {\r\n    navigate(\"/forum/detail\");\r\n  };\r\n\r\n  // Carouse\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          width: \"93%\",\r\n          textAlign: \"center\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <SwipeableCarousel\r\n          activeIndex={activeIndex}\r\n          setActiveIndex={setActiveIndex}\r\n          carouselItems={carouselItems}\r\n        >\r\n          <Grid container style={{ marginRight: \"20px\" }}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                justifyContent: \"space-between\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              {cardData.map((item, index) => {\r\n                return (\r\n                  <MyCard\r\n                    onForumClick={onForumClick}\r\n                    key={index}\r\n                    tag={item.tag}\r\n                    title={item.title}\r\n                    isMobile={isMobile}\r\n                  />\r\n                );\r\n              })}\r\n            </Box>\r\n          </Grid>\r\n\r\n          <Grid container style={{ marginRight: \"20px\" }}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                justifyContent: \"space-between\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              {cardData.map((item, index) => {\r\n                return (\r\n                  <MyCard\r\n                    onForumClick={onForumClick}\r\n                    key={index}\r\n                    tag={item.tag}\r\n                    title={item.title}\r\n                    isMobile={isMobile}\r\n                  />\r\n                );\r\n              })}\r\n            </Box>\r\n          </Grid>\r\n        </SwipeableCarousel>\r\n      </Box>\r\n\r\n      <Stack alignItems=\"center\" marginY=\"1rem\">\r\n        <AppPagination\r\n          shape=\"rounded\"\r\n          onChange={handlePagination}\r\n          count={carouselItems.length}\r\n          page={activeIndex + 1}\r\n        />\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n\r\nconst MyCard = ({ isMobile, tag, title, onForumClick }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Grid\r\n      onClick={() => onForumClick()}\r\n      item\r\n      sx={{ marginBottom: 4, cursor: \"pointer\" }}\r\n    >\r\n      {/* <Grid item sm={3} xs={12}> */}\r\n      <Grid\r\n        container\r\n        sx={{\r\n          width: \"100%\",\r\n          backgroundColor: \"#ffffff\",\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          overflow: \"hidden\",\r\n          justifyContent: \"space-between\",\r\n          border: \"1px solid #e1e1e1\",\r\n          borderRadius: 3,\r\n          maxWidth: \"9.5rem\", // Adjust this value as needed\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          item\r\n          mb={0}\r\n          sx={{\r\n            position: \"relative\",\r\n            overflow: \"hidden\",\r\n            width: \"100%\",\r\n            height: \"100px\",\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            sx={{\r\n              borderTopLeftRadius: 3,\r\n              // transition: \"transform 0.3s ease-in-out\", // Added transition\r\n              // \"&:hover\": {\r\n              //   transform: \"scale(1.1)\", // Added hover effect\r\n              // },\r\n            }}\r\n          >\r\n            <img\r\n              width=\"100%\"\r\n              height=\"100px\"\r\n              src={img3}\r\n              alt={\"Banner\"}\r\n              style={{\r\n                borderTopLeftRadius: 12,\r\n                borderTopRightRadius: 12,\r\n                objectFit: \"cover\",\r\n                // transition: \"transform 0.3s ease-in-out\", // Added transition\r\n                // \"&:hover\": {\r\n                //   transform: \"scale(1.1)\", // Added hover effect\r\n                // },\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Chip\r\n            label={\r\n              <span\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    marginRight: \"5px\",\r\n                    height: \"6px\",\r\n                    width: \"6px\",\r\n                    borderRadius: 10,\r\n                    display: \"inline-block\",\r\n                    backgroundColor:\r\n                      tag === \"HOT\" || tag === \"NEW\"\r\n                        ? theme.palette.primary.violet\r\n                        : tag === \"BEST\" || tag === \"AD\"\r\n                        ? theme.palette.primary.green\r\n                        : theme.palette.primary.red,\r\n                  }}\r\n                ></div>\r\n                <strong\r\n                  style={{\r\n                    marginRight: \"3px\",\r\n                    color:\r\n                      tag === \"HOT\" || tag === \"NEW\"\r\n                        ? theme.palette.primary.violet\r\n                        : tag === \"BEST\" || tag === \"AD\"\r\n                        ? theme.palette.primary.green\r\n                        : theme.palette.primary.red,\r\n                  }}\r\n                >\r\n                  {tag}\r\n                </strong>\r\n              </span>\r\n            }\r\n            sx={{\r\n              height: 22,\r\n              fontSize: 12.5,\r\n              backgroundColor:\r\n                tag === \"HOT\" || tag === \"NEW\"\r\n                  ? theme.palette.primary.lightViolet\r\n                  : tag === \"BEST\" || tag === \"AD\"\r\n                  ? theme.palette.primary.lightGreen\r\n                  : theme.palette.primary.lightRed,\r\n              position: \"absolute\",\r\n              top: 10,\r\n              left: 10,\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid container item spacing={1} mt={0} mb={0} ml={0.5} mr={0.5}>\r\n          <Grid\r\n            item\r\n            sx={{\r\n              // display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <FlexRowAlign gap={0.5}>\r\n              <img src={heart} width={\"16px\"} />\r\n              <span\r\n                style={{\r\n                  fontSize: 12.5,\r\n                  color: \"#024EA2\",\r\n                  fontWeight: 500,\r\n                }}\r\n              >\r\n                좋아요{\" \"}\r\n                <strong\r\n                  style={{\r\n                    fontWeight: 800,\r\n                  }}\r\n                >\r\n                  78개\r\n                </strong>\r\n              </span>\r\n            </FlexRowAlign>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <FlexRowAlign gap={0.5}>\r\n              <img src={chat} width={\"16px\"} />\r\n              <span\r\n                style={{\r\n                  fontSize: 12.5,\r\n                  color: \"#024EA2\",\r\n                  fontWeight: 500,\r\n                }}\r\n              >\r\n                댓글{\" \"}\r\n                <strong\r\n                  style={{\r\n                    fontWeight: 800,\r\n                  }}\r\n                >\r\n                  24개\r\n                </strong>\r\n              </span>\r\n            </FlexRowAlign>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          item\r\n          sx={{\r\n            paddingY: 0.8,\r\n            paddingX: 1.5,\r\n            height: \"56px\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: \"-webkit-box\",\r\n              WebkitBoxOrient: \"vertical\",\r\n              WebkitLineClamp: 2,\r\n              overflow: \"hidden\",\r\n              paddingRight: \"2px\",\r\n            }}\r\n          >\r\n            <H6\r\n              sx={{\r\n                fontWeight: 700,\r\n                width: \"100%\",\r\n                textAlign: \"left\",\r\n                fontSize: isMobile ? \"15px\" : \"inherit\",\r\n              }}\r\n            >\r\n              {title}\r\n            </H6>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid container item gap={1} mt={0} mb={1} mx={1.5}>\r\n          <Grid\r\n            item\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <FlexRowAlign gap={0.5}>\r\n              <span\r\n                style={{\r\n                  fontSize: 12.5,\r\n                  color: \"#024EA2\",\r\n                  fontWeight: 500,\r\n                }}\r\n              >\r\n                작성자\r\n              </span>\r\n            </FlexRowAlign>\r\n          </Grid>\r\n\r\n          <Grid\r\n            mx={0.2}\r\n            item\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Divider\r\n              orientation=\"vertical\"\r\n              style={{\r\n                width: \"2px\",\r\n                height: \"11px\",\r\n                color: \"#024EA2\",\r\n                backgroundColor: \"#024EA2\",\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <FlexRowAlign gap={0.5}>\r\n              <span\r\n                style={{\r\n                  fontSize: 12.5,\r\n                  color: \"#024EA2\",\r\n                  fontWeight: 500,\r\n                }}\r\n              >\r\n                정닥터\r\n              </span>\r\n            </FlexRowAlign>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container item mx={1.5} mb={1}>\r\n          <H6 sx={{ color: \"#151515\", fontWeight: 800 }} mb={0}>\r\n            월 28,250원\r\n          </H6>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          spacing={0.5}\r\n          mb={0.5}\r\n          sx={{ paddingLeft: 1, paddingRight: 1, paddingBottom: 1 }}\r\n        >\r\n          <Grid item>\r\n            <Chip\r\n              label={\"신한\"}\r\n              sx={{\r\n                height: 22,\r\n                fontSize: 12.5,\r\n                fontWeight: 600,\r\n                color: \"#024EA2\",\r\n                backgroundColor: alpha(\"#024EA2\", 0.1),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip\r\n              label={\"한화\"}\r\n              sx={{\r\n                height: 22,\r\n                fontSize: 12.5,\r\n                fontWeight: 600,\r\n                color: \"#024EA2\",\r\n                backgroundColor: alpha(\"#024EA2\", 0.1),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip\r\n              label={\"DB\"}\r\n              sx={{\r\n                height: 22,\r\n                fontSize: 12.5,\r\n                fontWeight: 600,\r\n                color: \"#024EA2\",\r\n                backgroundColor: alpha(\"#024EA2\", 0.1),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip\r\n              label={\"ORIGINAL\"}\r\n              sx={{\r\n                height: 22,\r\n                fontSize: 12.5,\r\n                color: \"#ffffff\",\r\n                backgroundColor: \"#000000\",\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip\r\n              label={\"BEST\"}\r\n              sx={{\r\n                height: 22,\r\n                fontSize: 12.5,\r\n                color: \"#024EA2\",\r\n                backgroundColor: alpha(\"#024EA2\", 0.1),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Chip\r\n              label={\"NEW\"}\r\n              sx={{\r\n                height: 22,\r\n                fontSize: 12.5,\r\n                color: \"#E95050\",\r\n                backgroundColor: alpha(\"#E95050\", 0.1),\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { useTheme } from \"@emotion/react\";\nimport {\n  Box,\n  Card,\n  Chip,\n  Grid,\n  Stack,\n  styled,\n  useMediaQuery,\n} from \"@mui/material\";\nimport calendar from \"assets/calendar.svg\";\nimport check from \"assets/check.svg\";\nimport checkIcon from \"assets/icon-check-admin.svg\";\nimport pin from \"assets/icon-pin.svg\";\nimport img1 from \"assets/img1.png\";\nimport view from \"assets/view.svg\";\nimport ReversePagination from \"components/ReversePagination\";\nimport { H5, H6 } from \"components/Typography\";\nimport FlexRowAlign from \"components/flexbox/FlexRowAlign\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { Image } from \"lucide-react\";\nimport Card2 from \"page-sections/forum-list/Card2\";\nimport CarouselCard2 from \"page-sections/forum-list/CarouselCard2\";\nimport AppPagination from \"components/AppPagination\";\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: \"2rem 2rem 1rem 2rem\",\n  justifyContent: \"space-between\",\n  flexDirection: \"column\",\n  [theme.breakpoints.down(\"sm\")]: {\n    // padding: \"2rem\",\n    padding: \"0rem 0rem 0rem 0rem\",\n    textAlign: \"center\",\n    borderRadius: 0,\n    \"& > .MuiBox-root\": {\n      paddingBottom: 0,\n    },\n  },\n}));\n\nexport default function List({\n  articles,\n  loading,\n  error,\n  pagination,\n  onPageChange,\n}) {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const isTablet = useMediaQuery(theme.breakpoints.down(\"lg\"));\n  const pageOptions = [1, 2, 3];\n\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [selectValue, setSelectValue] = useState(\"\");\n  const [format, setFormat] = useState(\"list\");\n\n  const handleChange = (event) => {\n    setSelectValue(event.target.value);\n  };\n\n  const onForumClick = (articleId) => {\n    navigate(`/forum/detail?id=${articleId}`);\n  };\n  return (\n    <StyledCard>\n      <img\n        src={img1}\n        alt=\"check\"\n        style={{\n          height: isMobile ? \"160px\" : \"240px\",\n          width: \"100%\",\n          objectFit: \"cover\",\n          borderRadius: isMobile ? 0 : 10,\n        }}\n      />\n      <Box\n        mt={4}\n        mb={2}\n        px={isMobile ? 2 : 0}\n        sx={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <H5>\n          <span style={{ color: theme.palette.primary.darkBlue }}>\n            {articles.length}\n          </span>\n          {t(\"forum.post_count\")}\n        </H5>\n\n        <FlexRowAlign\n          gap={1.5}\n          sx={{\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <H6\n            sx={{\n              fontWeight: 600,\n              color: theme.palette.primary.grey,\n              cursor: \"pointer\",\n            }}\n          >\n            {t(\"forum.sort.popular\")}\n          </H6>\n\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              cursor: \"pointer\",\n            }}\n          >\n            <img src={check} alt=\"check\" width=\"11px\" />\n            <H6\n              ml={0.5}\n              sx={{\n                fontWeight: 600,\n                color: theme.palette.primary.darkBlue,\n              }}\n            >\n              {t(\"forum.sort.latest\")}\n            </H6>\n          </Box>\n\n          <H6\n            mr={1.5}\n            sx={{\n              fontWeight: 600,\n              color: theme.palette.primary.grey,\n              cursor: \"pointer\",\n            }}\n          >\n            {t(\"forum.sort.views\")}\n          </H6>\n        </FlexRowAlign>\n      </Box>\n\n      {/* <Grid\n        container\n        direction=\"row\"\n        mb={1.5}\n        px={isMobile ? 2 : 0}\n        py={isMobile ? 1 : 0}\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <Grid\n          item\n          mb={isMobile ? 2 : 0}\n          sx={{\n            display: \"flex\",\n            justifyContent: isMobile ? \"space-between\" : \"flex-start\",\n            alignItems: \"center\",\n            width: isMobile ? \"100%\" : \"auto\",\n          }}\n        >\n          <FlexRowAlign gap={1.5}>\n            <ListIcon\n              onClick={() => setFormat(\"list\")}\n              size={22}\n              color={theme.palette.primary.grey}\n              style={{ cursor: \"pointer\" }}\n            />\n\n            <GridIcon\n              onClick={() => setFormat(\"grid\")}\n              size={22}\n              color={theme.palette.primary.grey}\n              style={{ cursor: \"pointer\" }}\n            />\n          </FlexRowAlign>\n        </Grid>\n\n        <Grid item sx={{ display: \"flex\", flexDirection: \"row\" }}>\n          <Grid item>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={selectValue}\n              placeholder=\"제목 + 내용\"\n              onChange={handleChange}\n              MenuProps={{\n                MenuListProps: {\n                  style: {\n                    padding: \"0\",\n                    margin: \"0\",\n                  },\n                },\n              }}\n              input={\n                <InputBase\n                  sx={{\n                    height: 40,\n                    width: 110,\n                    fontSize: 14,\n                    textAlign: \"left\",\n                    paddingLeft: \"10px !important\",\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    borderRadius: \"8px\",\n                    color: \"text.primary\",\n                    backgroundColor: \"#ffffff\",\n                    marginBottom: 0,\n                    border: \"1px solid #E1E1E1\",\n                    \"& .MuiPopover-paper\": {\n                      boxShadow: \"none\",\n                    },\n                    \"& > .MuiSelect-select\": {\n                      paddingRight: \"0 !important\",\n                    },\n                  }}\n                />\n              }\n            >\n              <MenuItem\n                sx={{\n                  height: 40,\n                  width: 110,\n                  fontSize: 14,\n                  fontWeight: 300,\n                  border: \"1px solid #E1E1E1\",\n                }}\n                value={\"제목 + 내용\"}\n              >\n                제목 + 내용\n              </MenuItem>\n              <MenuItem\n                sx={{\n                  height: 40,\n                  width: 110,\n                  fontSize: 14,\n                  fontWeight: 300,\n                  border: \"1px solid #E1E1E1\",\n                }}\n                value={\"제목\"}\n              >\n                제목\n              </MenuItem>\n              <MenuItem\n                sx={{\n                  height: 40,\n                  width: 110,\n                  fontSize: 14,\n                  fontWeight: 300,\n                  border: \"1px solid #E1E1E1\",\n                }}\n                value={\"내용\"}\n              >\n                내용\n              </MenuItem>\n            </Select>\n          </Grid>\n\n          <Grid item ml={2} sx={{ width: isMobile ? \"100%\" : \"160px\" }}>\n            <SearchInput\n              bordered={true}\n              placeholder=\"게시글 검색\"\n              onChange={(e) => setSearchValue(e.target.value)}\n            />\n          </Grid>\n        </Grid>\n      </Grid> */}\n\n      {loading ? (\n        <Box sx={{ textAlign: \"center\", py: 3 }}>Loading...</Box>\n      ) : error ? (\n        <Box sx={{ textAlign: \"center\", py: 3, color: \"error.main\" }}>\n          {error}\n        </Box>\n      ) : (\n        <>\n          {format === \"list\" ? (\n            // 리스트 뷰\n            <>\n              {!isTablet && (\n                <Grid\n                  container\n                  direction=\"row\"\n                  justifyContent={\"center\"}\n                  alignItems={\"center\"}\n                  sx={{ padding: \"1rem 0px\" }}\n                >\n                  <Grid container item sm={8}>\n                    <Grid item sm={12}>\n                      <H6 sx={{ fontWeight: 600 }}>{t(\"forum.table.title\")}</H6>\n                    </Grid>\n                  </Grid>\n                  <Grid container item sm={4}>\n                    <Grid item sm={4}>\n                      <H6 sx={{ fontWeight: 600 }}>\n                        {t(\"forum.table.author\")}\n                      </H6>\n                    </Grid>\n                    <Grid item sm={3}>\n                      <H6 sx={{ fontWeight: 600 }}>{t(\"forum.table.views\")}</H6>\n                    </Grid>\n                    <Grid item sm={5}>\n                      <H6 sx={{ fontWeight: 600 }}>{t(\"forum.table.date\")}</H6>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              )}\n\n              {articles.map((item, index) => (\n                <ListFormat\n                  key={item._id}\n                  item={{\n                    ...item,\n                    isAdmin: false,\n                    title: item.title,\n                    // numOfComment: item.comments ? item.comments.length : 0,\n                    writer: item.userName,\n                    likes: item.likes ? item.likes.length : 0,\n                    views: item.views || 0,\n                    date: new Date(item.createdAt).toLocaleDateString(),\n                    index: index + 1,\n                    type: item.type || \"sell\",\n                  }}\n                  isMobile={isMobile}\n                  isTablet={isTablet}\n                  theme={theme}\n                  onForumClick={onForumClick}\n                />\n              ))}\n            </>\n          ) : (\n            // 포토 뷰\n            <Grid container spacing={0} px={0} justifyContent=\"flex-end\">\n              <Grid\n                container\n                item\n                sx={{\n                  display: \"flex\",\n                  justifyContent: isTablet ? \"center\" : \"space-between\",\n                  flexWrap: \"wrap\",\n                  alignItems: \"center\",\n                }}\n              >\n                {isTablet\n                  ? GridFormat(isTablet, theme, onForumClick)\n                  : articles.map((item, index) => {\n                      return GridFormat(\n                        item,\n                        index,\n                        isTablet,\n                        theme,\n                        onForumClick\n                      );\n                    })}\n              </Grid>\n            </Grid>\n          )}\n        </>\n      )}\n      <Stack alignItems=\"center\" marginY=\"1rem\">\n        <AppPagination\n          count={pagination.totalPages}\n          page={pagination.currentPage}\n          onChange={(value) => onPageChange(value)}\n        />\n      </Stack>\n    </StyledCard>\n  );\n}\n\nconst ListFormat = ({\n  item,\n  index,\n  isMobile,\n  isTablet,\n  theme,\n  onForumClick,\n}) => {\n  const { t } = useTranslation(); // Add translation hook\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      sx={{\n        borderTop: \"1px solid #E1E1E1\",\n        padding: \"1rem 1rem\",\n        backgroundColor: item.isAdmin ? \"#F9FAFD\" : \"#ffffff\",\n        cursor: \"pointer\",\n      }}\n      onClick={() => onForumClick(item._id)} // Pass the article ID\n    >\n      <Grid\n        item\n        xs={12}\n        md={isTablet ? 8 : 8}\n        direction={\"row\"}\n        sx={{ textAlign: \"left\" }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n          }}\n        >\n          {item.isAdmin && (\n            <Grid\n              item\n              justifyContent={\"center\"}\n              alignItems={\"center\"}\n              mr={1}\n              sx={{ marginTop: \"3px\" }}\n            >\n              <img src={pin} alt=\"pin\" width=\"11px\" />\n            </Grid>\n          )}\n          <Box\n            sx={{\n              borderRadius: \"10px\",\n              overflow: \"hidden\",\n              width: \"54px\",\n              height: \"54px\",\n              flexShrink: 0,\n              backgroundColor: theme.palette.primary.grey800,\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            {item.images?.[0]?.path ? (\n              <img\n                src={item.images?.[0]?.path}\n                alt=\"thumbnail\"\n                style={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\",\n                  borderRadius: \"10px\",\n                  border: `1px solid ${theme.palette.primary.border}`,\n                }}\n              />\n            ) : (\n              <Image\n                width={30}\n                height={30}\n                color={theme.palette.primary.border}\n                strokeWidth={1.5}\n              />\n            )}\n          </Box>\n          <H6\n            sx={{\n              fontWeight: item.isAdmin ? 600 : 500,\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"nowrap\",\n              width: \"100%\",\n              paddingRight: isTablet ? \"1rem\" : 0,\n              marginLeft: \"8px\",\n            }}\n          >\n            {item.type === \"buy\" && (\n              <Chip\n                label={t(\"forum.type.buy\")}\n                sx={{\n                  backgroundColor: theme.palette.primary.lightRed,\n                  marginRight: \"8px\",\n                  fontSize: \"14px\",\n                  color: theme.palette.primary.red,\n                  height: \"28px\",\n                }}\n              />\n            )}\n            {item.type === \"sell\" && (\n              <Chip\n                label={t(\"forum.type.sell\")}\n                sx={{\n                  marginRight: \"8px\",\n                  fontSize: \"14px\",\n                  color: theme.palette.primary.darkBlue,\n                  height: \"28px\",\n                }}\n              />\n            )}\n            {item.title}\n            {/* {item.numOfComment > 0 && (\n              <span\n                style={{\n                  marginLeft: \"4px\",\n                  color: theme.palette.darkBlue,\n                }}\n              >\n                ({item.numOfComment})\n              </span>\n            )} */}\n          </H6>\n        </Box>\n      </Grid>\n      <Grid\n        container\n        item\n        xs={12}\n        md={isTablet ? 4 : 4}\n        direction={\"row\"}\n        sx={{\n          textAlign: \"left\",\n          marginTop: isMobile ? 1 : 0,\n          justifyContent: \"flex-start\",\n        }}\n        alignItems={\"center\"}\n        spacing={1}\n      >\n        <Grid\n          item\n          xs={4}\n          md={isTablet ? 5 : 4}\n          sx={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"flex-start\",\n          }}\n        >\n          <H6 style={{ fontWeight: 500 }}>\n            {`${item.writer}`.length > 5\n              ? `${item.writer}`.substring(0, 5) + \"...\"\n              : `${item.writer}`}\n          </H6>\n          {item.isAdmin && (\n            <img\n              src={checkIcon}\n              alt=\"check\"\n              width=\"16px\"\n              style={{ marginLeft: \"4px\" }}\n            />\n          )}\n        </Grid>\n        <Grid item xs={4} md={isTablet ? 3 : 3} sx={{ textAlign: \"left\" }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <img\n              src={view}\n              alt=\"check\"\n              width=\"13px\"\n              style={{ marginRight: \"4px\", marginBottom: \"1px\" }}\n            />\n            <H6 style={{ fontWeight: 500 }}>{item.views}</H6>\n          </Box>\n        </Grid>\n        <Grid item xs={4} md={isTablet ? 4 : 5} sx={{ textAlign: \"left\" }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <img\n              src={calendar}\n              alt=\"check\"\n              width=\"13px\"\n              style={{ marginRight: \"4px\", marginBottom: \"1px\" }}\n            />\n            <H6 style={{ fontWeight: 500 }}>{item.date}</H6>\n          </Box>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst GridFormat = (item, index, isMobile, isTablet, theme, onForumClick) => {\n  return (\n    <>\n      {isTablet ? (\n        <>\n          <CarouselCard2 onForumClick={onForumClick} />\n        </>\n      ) : (\n        <>\n          <Card2 onForumClick={onForumClick} />\n        </>\n      )}\n    </>\n  );\n};\n"],"names":["_ref","totalItems","useTheme","currentPage","setCurrentPage","useState","totalPages","handlePageChange","page","onChange","renderPageButton","pageNumber","_jsx","className","onClick","children","_jsxs","Button","handleNextClick","Math","min","disabled","style","borderWidth","backgroundColor","height","minWidth","maxWidth","ChevronLeft","size","H7","renderPageNumbers","pageNumbers","startPage","max","floor","pageRange","endPage","push","i","handlePreviousClick","ChevronRight","Card2","onForumClick","theme","useMediaQuery","breakpoints","down","_Fragment","Grid","item","sx","cursor","mb","container","width","display","borderRadius","overflow","border","justifyContent","src","img1","alt","objectFit","px","spacing","mt","alignItems","FlexRowAlign","gap","heart","fontSize","color","fontWeight","mx","Divider","orientation","chat","Box","flexDirection","H6","lineHeight","Chip","label","alpha","StyledPagination","styled","Pagination","_ref2","count","props","handleChange","event","value","flag","activeIndex","setActiveIndex","carouselItems","customStyle","bind","useDrag","direction","distance","join","prevIndex","length","textAlign","position","touchAction","onPointerUp","handlePointerUp","Carousel","swipe","stopAutoPlayOnHover","autoPlay","animation","index","indicators","NavButton","_ref3","next","prev","top","left","transform","name","description","indicatorTitle","img","Banner","Banner2","cardData","title","tag","CarouselCard2","isMobile","navigate","useNavigate","SwipeableCarousel","marginRight","flexWrap","map","MyCard","Stack","marginY","AppPagination","shape","handlePagination","marginBottom","borderTopLeftRadius","img3","borderTopRightRadius","palette","primary","violet","green","red","lightViolet","lightGreen","lightRed","ml","mr","paddingY","paddingX","WebkitBoxOrient","WebkitLineClamp","paddingRight","paddingLeft","paddingBottom","StyledCard","Card","padding","List","articles","loading","error","pagination","onPageChange","t","useTranslation","isTablet","searchValue","setSearchValue","selectValue","setSelectValue","format","setFormat","articleId","H5","darkBlue","grey","check","py","sm","ListFormat","isAdmin","writer","userName","likes","views","date","Date","createdAt","toLocaleDateString","type","_id","GridFormat","_item$images","_item$images$","_item$images2","_item$images2$","borderTop","xs","md","marginTop","pin","flexShrink","grey800","images","path","Image","strokeWidth","textOverflow","whiteSpace","marginLeft","substring","checkIcon","view","calendar"],"sourceRoot":""}